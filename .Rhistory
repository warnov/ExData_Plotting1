1+1
2+2+3
demo()
library(devtools)
install.packages(devtools)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
swirl()
library(swirl)
swirl()
read.csv(path2csv, stringsAsFactors = FALSE)
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
adsdsa
1:3
select(cran, -(X:size))
lter(cran, package == "swirl")
filÃ±lter(cran, package == "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country ="US")
filter(cran, r_version == "3.1.1", country =="US")
?Comparison
filter(cran, r_version <= "3.1.1", country =="IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
1:1
filter(cran, size > 100500, r_os =="linux-gnu")
is.na(c(3, 5, NA, 10))
1:1
!is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
filter(cran, !is.na(r_version))
select(cran, size:ip_id)
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, conutry, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
asd
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb=size_mb/2^10)
mutate(cran3, size_mb = size / 2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
reset()
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(top_counts, unique>45)
top_unique<-filter(top_counts, unique>45)
top_unique<-filter(top_counts, unique>465)
top_unique<-filter(pack_sum, unique>465)
top_unique
arrange(top_unique,desc(unique))
submit()
submnit
submit()
reset()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
students
gather(students, sex, count, -grade)
student2
students2
res<.gather(students2, sex_class, count, -grade)
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
submit()
play()
reset()
?gather
nxt()
submit()
?spread
submit()
play()
s3<-gather(class, grade, class1:class5, na.rm = TRUE)
s3<-gather(students3, class, grade, class1:class5, na.rm = TRUE)
s3
spread(s3,test)
spread(s3,test, tw)
spread(s3,test, class)
spread(s3,test, grade)
nxt()
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
student_info
unique(student_info)
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
rbind_list(passed, failed)
sat
submit()
submit()
?separate
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
wd
swd
wsd
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "ss06hid.csv")
df<-read.csv("ss06hid.csv")
df$val
df$VAL
df$VAL==24
df$VAL[df$VAL==24]
df$VAL[df$VAL==24&!is.na(df$VAL==24)]
sum(df$VAL==24)
length(df$VAL[df$VAL==24&!is.na(df$VAL==24)])
df$FES
unique(df$FES)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile = "ngap.xlsx")
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
install.packages("xlsx")
read.xlsx()
library(xlsx)
install.packages("rJava")
library(xlsx)
library(xlsx)
install.packages("rJava")
library(xlsx)
library(rJava)
library(xlsx)
dat<-read.xlsx(file = "ngap.xlsx")
dat<-read.xlsx(file = "ngap.xlsx", sheetIndex = 1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "ngap.xlsx")
cols<-7:15
rows<-18:23
dat<-read.xlsx(file = "ngap.xlsx", sheetIndex = 1, rowIndex = rows, colIndex = cols)
packages.install("xlsx")
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
cols<-7:15
rows<-18:23
dat<-read.xlsx(file = "ngap.xlsx", sheetIndex = 1, rowIndex = rows, colIndex = cols)
dat<-read.xlsx(file = "ngap.xlsx", sheetIndex = 1)
read.csv("clean.csv")
dat<-read.csv("clean.csv")
dat
sum(dat$Zip*dat$Ext,na.rm=T)
packages.install("XML")
install.packages("XML")
library("XML")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "restaurants.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "restaurants.xml")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileUrl, useInternal=TRUE)
xmlTreeParse(file="restaurants.xml")
doc<-xmlTreeParse(file="restaurants.xml")
doc
class(doc)
dat[1]
rootNode<-xmlRoot(doc)
rootNode
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[[1]]
rootNode[[[1]]]
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
xpathSApply(rootNode,"//zipcode"m)
xpathSApply(rootNode,"//zipcode",21206)
names(rootNode)
rootNone["row"]
rootNode["row"]
content<-rootNode["row"]
names(content)
content[[1]]
content[[1]][[1]]
content[[1]][[1][2]]
content[[1]][[1]][[2]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "dt.csv")
DT<-read.csv("dt.csv")
library(data.table)
install.packages("data.table")
library(data.table)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(result<-mean(DT$pwgtp15,by=DT$SEX))
result
system.time(result<-mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(result<-mean(DT[DT$SEX==1,]$pwgtp15)
system.time(result<-mean(DT[DT$SEX==1,]$pwgtp15))
result
mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1];
rowMeans(DT)[DT$SEX==2]
mean(DT$pwgtp15,by=DT$SEX)
?fread()
?fread
fread(input = "dt.csv")
dat<-fread(input = "dt.csv")
DT<-fread(input = "dt.csv")
class(DT)
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(ans<-mean(DT$pwgtp15,by=DT$SEX))
and
ans
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(ans<-mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(ans<-(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)))
system.time(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
(99.80667+96.66534)/2
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(DT[,mean(pwgtp15),by=SEX])
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
a<-system.time(mean(DT[DT$SEX==1,]$pwgtp15))
a
a<-system.time(mean(DT[DT$SEX==1,]$pwgtp15))
a
a<-system.time(mean(DT[DT$SEX==1,]$pwgtp15))
a
a<-system.time(mean(DT[DT$SEX==1,]$pwgtp15))
a
b<-system.time(mean(DT[DT$SEX==2,]$pwgtp15))
b
a+b
b<-system.time(mean(DT[DT$SEX==2,]$pwgtp15))
b
op1<-a+b
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
op2<-system.time(DT[,mean(pwgtp15),by=SEX])
op1>op2
op1
op2
tapply(DT$pwgtp15,DT$SEX,mean)
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean))
op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean))
op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean));op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean));op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean));op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean));op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean));op3
op3<-system.time(tapply(DT$pwgtp15,DT$SEX,mean));op3
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]
op1;op2
library(xlsx)
R.home()
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
setwd("C:/00/r/exploratory/proy1/ExData_Plotting1")
source('C:/00/r/exploratory/proy1/ExData_Plotting1/plot1.R')
plot1()
